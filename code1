// Project: ReviseSmart
// Paste the following into a new GitHub repo and run `npm install && npm run dev` (or `npm start`).

// ─── package.json ─────────────────────────────────────────────────────────────
{
  "name": "revise-smart",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1"
  },
  "devDependencies": {
    "autoprefixer": "^10.4.7",
    "postcss": "^8.4.14",
    "tailwindcss": "^3.1.8"
  }
}


// ─── tailwind.config.js ───────────────────────────────────────────────────────
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
    "./public/index.html"
  ],
  theme: { extend: {} },
  plugins: []
};


// ─── postcss.config.js ────────────────────────────────────────────────────────
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {}
  }
};


// ─── vercel.json ──────────────────────────────────────────────────────────────
{
  "rewrites": [
    { "source": "/(.*)", "destination": "/" }
  ]
}


// ─── public/index.html ─────────────────────────────────────────────────────────
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>ReviseSmart</title>
</head>
<body>
  <div id="root"></div>
</body>
</html>


// ─── src/index.css ─────────────────────────────────────────────────────────────
@tailwind base;
@tailwind components;
@tailwind utilities;


// ─── src/index.js ─────────────────────────────────────────────────────────────
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);


// ─── src/App.jsx ─────────────────────────────────────────────────────────────
import React, { useState } from 'react';

const questions = [
  {
    id: 1,
    subject: 'Biology',
    topic: 'Respiration',
    difficulty: 'Medium',
    question: 'Describe how energy is released during aerobic respiration.',
    answer: 'Energy is released as glucose reacts with oxygen to form carbon dioxide and water.',
  },
  {
    id: 2,
    subject: 'Chemistry',
    topic: 'Acids & Bases',
    difficulty: 'Easy',
    question: 'What is the pH range of a weak acid?',
    answer: 'A weak acid typically has a pH between 4 and 6.',
  },
];

export default function App() {
  const [selectedTopic, setSelectedTopic] = useState('');
  const [showAnswerId, setShowAnswerId] = useState(null);

  const filteredQuestions = selectedTopic
    ? questions.filter(q => q.topic === selectedTopic)
    : questions;

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <h1 className="text-3xl font-bold mb-6 text-center">ReviseSmart</h1>

      <div className="mb-4">
        <label className="block mb-2 font-medium">Filter by Topic:</label>
        <select
          onChange={e => setSelectedTopic(e.target.value)}
          className="p-2 border rounded"
        >
          <option value="">All Topics</option>
          <option value="Respiration">Respiration</option>
          <option value="Acids & Bases">Acids & Bases</option>
        </select>
      </div>

      <div className="grid gap-4">
        {filteredQuestions.map(q => (
          <div key={q.id} className="bg-white p-4 rounded shadow">
            <div className="font-semibold text-lg">{q.question}</div>
            <div className="text-sm text-gray-500 mt-1">
              Topic: {q.topic} | Difficulty: {q.difficulty}
            </div>
            <button
              onClick={() => setShowAnswerId(showAnswerId === q.id ? null : q.id)}
              className="mt-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600"
            >
              {showAnswerId === q.id ? 'Hide Answer' : 'Show Answer'}
            </button>
            {showAnswerId === q.id && (
              <div className="mt-2 text-green-600">{q.answer}</div>
            )}
          </div>
        ))}
      </div>
    </div>
  );
}

